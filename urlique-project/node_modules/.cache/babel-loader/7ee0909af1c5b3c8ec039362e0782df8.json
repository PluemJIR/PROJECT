{"ast":null,"code":"var _jsxFileName = \"/Users/pluemjir/Documents/CODECAMP ONLINE/Project/urlique-project/src/component/BookingCard/BookingCardAntd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, List } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport localStorageService from '../../services/localStorageService';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookingCardAntd = props => {\n  _s();\n\n  let username = '';\n\n  const getUsername = async () => {\n    const token = await localStorageService.getToken();\n\n    if (token) {\n      const user = jwtDecode(token); // console.log(user.name)\n\n      username = user.name;\n    }\n  };\n\n  const [Booking, setBooking] = useState([]);\n\n  const fetchReservation = async () => {\n    const myBooking = [];\n    let n = 0;\n    const httpResponse = await axios.get('http://localhost:5000/reservation');\n    const result = await axios.get(`http://localhost:5000/users/${username}`);\n    httpResponse.data.map(x => {\n      if (x.user_id === result.data.id) {\n        myBooking.push(x);\n        n += 1;\n      }\n    });\n    setBooking(myBooking);\n  };\n\n  const getAlldata = async () => {\n    await getUsername();\n    await fetchReservation();\n  };\n\n  const completeBooking = async id => {\n    const newStatus = 'COMPLETED';\n    await axios.put(`/reservation/${id}`, {\n      option: newStatus\n    });\n    await getAlldata();\n    console.log(id);\n  };\n\n  useEffect(() => {\n    getAlldata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    itemLayout: \"vertical\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    dataSource: Booking,\n    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n      children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        style: {\n          border: '3px solid black',\n          height: '100%',\n          backgroundColor: 'tomato',\n          width: '60%',\n          padding: '30px'\n        },\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold',\n              color: 'white'\n            },\n            children: item.restaurant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 61\n          }, this), \"#\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold',\n              color: 'white'\n            },\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 32\n        }, this),\n        description: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white'\n          },\n          children: [\"NOTE : \", item.description, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 121\n            }, this), \" \", item.number, item.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookingCardAntd, \"OqyYIJXRS1GngH325Vrch9H9/Xo=\");\n\n_c = BookingCardAntd;\nexport default BookingCardAntd;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingCardAntd\");","map":{"version":3,"sources":["/Users/pluemjir/Documents/CODECAMP ONLINE/Project/urlique-project/src/component/BookingCard/BookingCardAntd.js"],"names":["React","useEffect","useState","Button","List","UserOutlined","axios","localStorageService","jwtDecode","BookingCardAntd","props","username","getUsername","token","getToken","user","name","Booking","setBooking","fetchReservation","myBooking","n","httpResponse","get","result","data","map","x","user_id","id","push","getAlldata","completeBooking","newStatus","put","option","console","log","width","item","border","height","backgroundColor","padding","color","fontWeight","restaurant","description","number","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, List } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport axios from 'axios'\nimport localStorageService from '../../services/localStorageService'\nimport jwtDecode from 'jwt-decode'\n\n\n\nconst BookingCardAntd = (props) => {\n\n    let username = ''\n    const getUsername = async () => {\n        const token = await localStorageService.getToken();\n        if (token) {\n            const user = jwtDecode(token)\n            // console.log(user.name)\n            username = user.name\n        }\n    }\n    const [Booking, setBooking] = useState([])\n    const fetchReservation = async () => {\n        const myBooking = []\n        let n = 0\n        const httpResponse = await axios.get('http://localhost:5000/reservation')\n        const result = await axios.get(`http://localhost:5000/users/${username}`)\n        httpResponse.data.map(x => {\n            if (x.user_id === result.data.id) {\n                myBooking.push(x)\n                n += 1\n            }\n        })\n        setBooking(myBooking)\n    }\n\n    const getAlldata = async () => {\n        await getUsername()\n        await fetchReservation()\n    }\n\n    const completeBooking = async (id) => {\n        const newStatus = 'COMPLETED'\n        await axios.put(`/reservation/${id}`, { option: newStatus })\n        await getAlldata()\n        console.log(id)\n    }\n\n    useEffect(() => {\n        getAlldata()\n    }, [])\n    return (\n        <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            style={{ width: '100%' }}\n            dataSource={Booking}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        style={{border:'3px solid black', height:'100%', backgroundColor:'tomato', width:'60%', padding:'30px'}}\n                        title={<div style={{color:'white'}}><span style={{fontWeight:'bold', color:'white'}}>{item.restaurant}</span>#\n                            <span style={{fontWeight:'bold', color:'white'}}>{item.id}</span></div>}\n                        description={<div style={{color:'white'}}>NOTE : {item.description}<div style={{color:'white'}}><UserOutlined/> {item.number}{item.date}</div></div>}\n                    />\n                </List.Item>\n            )}\n        />\n    )\n}\n\nexport default BookingCardAntd"]},"metadata":{},"sourceType":"module"}