{"ast":null,"code":"var _jsxFileName = \"/Users/pluemjir/Documents/CODECAMP ONLINE/Project/urlique-project/src/component/Form/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {};\nstyle = {\n  width: '50%'\n};\nconst tailFormItemLayout = {};\n\nconst RegistrationForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"REGISTER NOW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      form: form,\n      name: \"register\",\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please input your name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"ENTER YOUR NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"ENTER YOUR USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"ENTER YOUR EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"hashtag\",\n        tooltip: \"Enter Something to find you easier\",\n        rules: [{\n          required: false,\n          message: 'Enter Something to find you easier!!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"YOUR HASHTAG (CAN ADD MORE THAN 1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"YOUR PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"confirm\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        })],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"CONFIRM YOUR PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/pluemjir/Documents/CODECAMP ONLINE/Project/urlique-project/src/component/Form/RegisterForm.js"],"names":["React","useState","Form","Input","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","formItemLayout","style","width","tailFormItemLayout","RegistrationForm","form","useForm","onFinish","values","console","log","textAlign","required","message","whitespace","type","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport './form.css'\nconst { Option } = Select;\n  \nconst formItemLayout = {\n  \n};style={width:'50%'}\nconst tailFormItemLayout = {\n  \n};\n\nconst RegistrationForm = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n\n\n  \nreturn (\n    <div className='register'>\n        <h3>REGISTER NOW</h3>\n        <Form\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            scrollToFirstError\n            style={{textAlign:'center'}}\n        >\n            <Form.Item\n            {...formItemLayout}\n            name=\"name\"\n            rules={[\n                {\n                required: true,\n                message: 'Please input your name',\n                },\n            ]}\n            >\n            <Input placeholder=\"ENTER YOUR NAME\" />\n            </Form.Item>\n            <Form.Item\n                name=\"username\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                    whitespace: true,\n                },\n                ]}\n            >\n            <Input placeholder=\"ENTER YOUR USERNAME\" />\n            </Form.Item>\n\n            <Form.Item\n            name=\"email\"\n            rules={[\n                {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n                },\n                {\n                required: true,\n                message: 'Please input your E-mail!',\n                },\n            ]}\n            >\n            <Input placeholder=\"ENTER YOUR EMAIL\" />\n            </Form.Item>\n\n            <Form.Item\n            {...formItemLayout}\n            name=\"hashtag\"\n            tooltip=\"Enter Something to find you easier\"\n            rules={[\n                {\n                required: false,\n                message: 'Enter Something to find you easier!!',\n                },\n            ]}\n            >\n            <Input placeholder=\"YOUR HASHTAG (CAN ADD MORE THAN 1)\" />\n            </Form.Item>\n\n            <Form.Item\n            name=\"password\"\n            rules={[\n                {\n                required: true,\n                message: 'Please input your password!',\n                },\n            ]}\n            hasFeedback\n            >\n            <Input.Password placeholder=\"YOUR PASSWORD\" />\n            </Form.Item>\n\n            <Form.Item\n            name=\"confirm\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n                {\n                required: true,\n                message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                },\n                }),\n            ]}\n            >\n            <Input.Password placeholder='CONFIRM YOUR PASSWORD' />\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Register\n            </Button>\n            </Form.Item>\n        </Form>\n    </div>\n);\n};\n\nexport default RegistrationForm"]},"metadata":{},"sourceType":"module"}