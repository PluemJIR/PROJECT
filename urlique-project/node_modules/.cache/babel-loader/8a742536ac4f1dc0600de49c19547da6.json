{"ast":null,"code":"var _jsxFileName = \"/Users/pluemjir/Documents/CODECAMP ONLINE/Project/urlique-project/src/component/Form/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {};\nconst tailFormItemLayout = {};\n\nconst RegistrationForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      form: form,\n      name: \"register\",\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please input your name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"ENTER YOUR NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"ENTER YOUR USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"ENTER YOUR EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"hashtag\",\n        tooltip: \"Enter Something to find you easier\",\n        rules: [{\n          required: false,\n          message: 'Enter Something to find you easier!!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"YOUR HASHTAG (CAN ADD MORE THAN 1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"YOUR PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"confirm\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        })],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"CONFIRM YOUR PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/pluemjir/Documents/CODECAMP ONLINE/Project/urlique-project/src/component/Form/RegisterForm.js"],"names":["React","Form","Input","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","formItemLayout","tailFormItemLayout","RegistrationForm","form","useForm","onFinish","values","console","log","required","message","type","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport './form.css'\nconst { Option } = Select;\n\nconst formItemLayout = {\n};\nconst tailFormItemLayout = {\n};\n\nconst RegistrationForm = () => {\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n\n\n\n    return (\n        <div className='register'>\n            <Form\n                {...formItemLayout}\n                form={form}\n                name=\"register\"\n                onFinish={onFinish}\n                scrollToFirstError\n            >\n                <Form.Item\n                    {...formItemLayout}\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your name',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"ENTER YOUR NAME\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your username!',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"ENTER YOUR USERNAME\" />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"ENTER YOUR EMAIL\" />\n                </Form.Item>\n\n                <Form.Item\n                    {...formItemLayout}\n                    name=\"hashtag\"\n                    tooltip=\"Enter Something to find you easier\"\n                    rules={[\n                        {\n                            required: false,\n                            message: 'Enter Something to find you easier!!',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"YOUR HASHTAG (CAN ADD MORE THAN 1)\" />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password placeholder=\"YOUR PASSWORD\" />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password placeholder='CONFIRM YOUR PASSWORD' />\n                </Form.Item>\n\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n            </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default RegistrationForm"]},"metadata":{},"sourceType":"module"}